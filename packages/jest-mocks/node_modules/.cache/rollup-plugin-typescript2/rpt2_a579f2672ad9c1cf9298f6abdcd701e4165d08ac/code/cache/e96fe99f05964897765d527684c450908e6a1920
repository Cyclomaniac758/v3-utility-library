{"code":"/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nexport class LatLng {\r\n    constructor(literal, noWrap) {\r\n        this.equals = jest\r\n            .fn()\r\n            .mockImplementation((other) => false);\r\n        this.lat = jest.fn().mockImplementation(() => 0);\r\n        this.lng = jest.fn().mockImplementation(() => 0);\r\n        this.toString = jest.fn().mockImplementation(() => \"\");\r\n        this.toUrlValue = jest.fn().mockImplementation((precision) => \"\");\r\n        this.toJSON = jest.fn().mockImplementation(() => {\r\n            return { lat: 0, lng: 0 };\r\n        });\r\n    }\r\n}\r\nexport class LatLngBounds {\r\n    constructor(sw, ne) {\r\n        this.contains = jest\r\n            .fn()\r\n            .mockImplementation((latLng) => false);\r\n        this.equals = jest\r\n            .fn()\r\n            .mockImplementation((other) => false);\r\n        this.extend = jest\r\n            .fn()\r\n            .mockImplementation((point) => this);\r\n        this.getCenter = jest\r\n            .fn()\r\n            .mockImplementation(() => new google.maps.LatLng({ lat: 0, lng: 0 }));\r\n        this.getNorthEast = jest\r\n            .fn()\r\n            .mockImplementation(() => new google.maps.LatLng({ lat: 0, lng: 0 }));\r\n        this.getSouthWest = jest\r\n            .fn()\r\n            .mockImplementation(() => new google.maps.LatLng({ lat: 0, lng: 0 }));\r\n        this.intersects = jest\r\n            .fn()\r\n            .mockImplementation((other) => false);\r\n        this.isEmpty = jest.fn().mockImplementation(() => false);\r\n        this.toJSON = jest.fn().mockImplementation(() => {\r\n            return { east: 0, north: 0, south: 0, west: 0 };\r\n        });\r\n        this.toSpan = jest\r\n            .fn()\r\n            .mockImplementation(() => new google.maps.LatLng({ lat: 0, lng: 0 }));\r\n        this.toString = jest.fn().mockImplementation(() => \"\");\r\n        this.toUrlValue = jest.fn().mockImplementation((precision) => \"\");\r\n        this.union = jest\r\n            .fn()\r\n            .mockImplementation((other) => this);\r\n    }\r\n}\r\n//# sourceMappingURL=latlng.js.map","references":[],"map":"{\"version\":3,\"file\":\"latlng.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/latlng.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;GAcG;AAEH,MAAM,OAAO,MAAM;IACjB,YAAY,OAAkC,EAAE,MAAgB;QAEhE,WAAM,GAAG,IAAI;aACV,EAAE,EAAE;aACJ,kBAAkB,CAAC,CAAC,KAAyB,EAAW,EAAE,CAAC,KAAK,CAAC,CAAC;QACrE,QAAG,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAW,EAAE,CAAC,CAAC,CAAC,CAAC;QACpD,QAAG,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAW,EAAE,CAAC,CAAC,CAAC,CAAC;QACpD,aAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAW,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1D,eAAU,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,SAAkB,EAAU,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9E,WAAM,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CACnC,GAA8B,EAAE;YAC9B,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;QAC5B,CAAC,CACF,CAAC;IAbiE,CAAC;CAcrE;AAED,MAAM,OAAO,YAAY;IACvB,YACE,EAAmD,EACnD,EAAmD;QAErD,aAAQ,GAAG,IAAI;aACZ,EAAE,EAAE;aACJ,kBAAkB,CACjB,CAAC,MAAsD,EAAW,EAAE,CAAC,KAAK,CAC3E,CAAC;QACJ,WAAM,GAAG,IAAI;aACV,EAAE,EAAE;aACJ,kBAAkB,CACjB,CACE,KAAiE,EACxD,EAAE,CAAC,KAAK,CACpB,CAAC;QACJ,WAAM,GAAG,IAAI;aACV,EAAE,EAAE;aACJ,kBAAkB,CACjB,CACE,KAAqD,EAC3B,EAAE,CAAC,IAAI,CACpC,CAAC;QACJ,cAAS,GAAG,IAAI;aACb,EAAE,EAAE;aACJ,kBAAkB,CACjB,GAAuB,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CACrE,CAAC;QACJ,iBAAY,GAAG,IAAI;aAChB,EAAE,EAAE;aACJ,kBAAkB,CACjB,GAAuB,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CACrE,CAAC;QACJ,iBAAY,GAAG,IAAI;aAChB,EAAE,EAAE;aACJ,kBAAkB,CACjB,GAAuB,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CACrE,CAAC;QACJ,eAAU,GAAG,IAAI;aACd,EAAE,EAAE;aACJ,kBAAkB,CACjB,CACE,KAAiE,EACxD,EAAE,CAAC,KAAK,CACpB,CAAC;QACJ,YAAO,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAY,EAAE,CAAC,KAAK,CAAC,CAAC;QAC7D,WAAM,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CACnC,GAAoC,EAAE;YACpC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;QAClD,CAAC,CACF,CAAC;QACF,WAAM,GAAG,IAAI;aACV,EAAE,EAAE;aACJ,kBAAkB,CACjB,GAAuB,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CACrE,CAAC;QACJ,aAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAW,EAAE,CAAC,EAAE,CAAC,CAAC;QAC1D,eAAU,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,SAAkB,EAAU,EAAE,CAAC,EAAE,CAAC,CAAC;QAC9E,UAAK,GAAG,IAAI;aACT,EAAE,EAAE;aACJ,kBAAkB,CACjB,CACE,KAAiE,EACvC,EAAE,CAAC,IAAI,CACpC,CAAC;IA7DD,CAAC;CA8DL\"}","dts":{"name":"/home/travis/build/googlemaps/v3-utility-library/packages/jest-mocks/latlng.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/// <reference types=\"googlemaps\" />\r\n/// <reference types=\"jest\" />\r\nexport declare class LatLng implements google.maps.LatLng {\r\n    constructor(literal: google.maps.LatLngLiteral, noWrap?: boolean);\r\n    equals: jest.Mock<any, any>;\r\n    lat: jest.Mock<any, any>;\r\n    lng: jest.Mock<any, any>;\r\n    toString: jest.Mock<any, any>;\r\n    toUrlValue: jest.Mock<any, any>;\r\n    toJSON: jest.Mock<any, any>;\r\n}\r\nexport declare class LatLngBounds implements google.maps.LatLngBounds {\r\n    constructor(sw?: google.maps.LatLng | google.maps.LatLngLiteral, ne?: google.maps.LatLng | google.maps.LatLngLiteral);\r\n    contains: jest.Mock<any, any>;\r\n    equals: jest.Mock<any, any>;\r\n    extend: jest.Mock<any, any>;\r\n    getCenter: jest.Mock<any, any>;\r\n    getNorthEast: jest.Mock<any, any>;\r\n    getSouthWest: jest.Mock<any, any>;\r\n    intersects: jest.Mock<any, any>;\r\n    isEmpty: jest.Mock<any, any>;\r\n    toJSON: jest.Mock<any, any>;\r\n    toSpan: jest.Mock<any, any>;\r\n    toString: jest.Mock<any, any>;\r\n    toUrlValue: jest.Mock<any, any>;\r\n    union: jest.Mock<any, any>;\r\n}\r\n"}}
