{"code":"/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { MVCObject } from \"./mvcobject\";\r\nexport class MVCArray extends MVCObject {\r\n    constructor(array) {\r\n        super();\r\n        this.clear = jest.fn().mockImplementation(() => { });\r\n        this.forEach = jest\r\n            .fn()\r\n            .mockImplementation((callback) => { });\r\n        this.getArray = jest.fn().mockImplementation(() => []);\r\n        this.getAt = jest.fn().mockImplementation((i) => ({}));\r\n        this.getLength = jest.fn().mockImplementation(() => 0);\r\n        this.insertAt = jest.fn().mockImplementation((i, elem) => { });\r\n        this.pop = jest.fn().mockImplementation(() => ({}));\r\n        this.push = jest.fn().mockImplementation((elem) => 0);\r\n        this.removeAt = jest.fn().mockImplementation((i) => ({}));\r\n        this.setAt = jest.fn().mockImplementation((i, elem) => { });\r\n    }\r\n}\r\n//# sourceMappingURL=mvcarray.js.map","references":["/home/travis/build/googlemaps/v3-utility-library/packages/jest-mocks/src/mvcobject.ts"],"map":"{\"version\":3,\"file\":\"mvcarray.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/mvcarray.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;GAcG;AAEH,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExC,MAAM,OAAO,QAAY,SAAQ,SAAS;IACxC,YAAY,KAAW;QACrB,KAAK,EAAE,CAAC;QAGV,UAAK,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAS,EAAE,GAAE,CAAC,CAAC,CAAC;QACrD,YAAO,GAAG,IAAI;aACX,EAAE,EAAE;aACJ,kBAAkB,CAAC,CAAC,QAAsC,EAAQ,EAAE,GAAE,CAAC,CAAC,CAAC;QAE5E,aAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;QACvD,UAAK,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAS,EAAK,EAAE,CAAC,CAAC,EAAQ,CAAA,CAAC,CAAC;QAClE,cAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAW,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1D,aAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAS,EAAE,IAAO,EAAQ,EAAE,GAAE,CAAC,CAAC,CAAC;QAC1E,QAAG,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAM,EAAE,CAAC,CAAC,EAAQ,CAAA,CAAC,CAAC;QACvD,SAAI,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,IAAO,EAAU,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5D,aAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAS,EAAK,EAAE,CAAC,CAAC,EAAQ,CAAA,CAAC,CAAC;QACrE,UAAK,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAS,EAAE,IAAO,EAAQ,EAAE,GAAE,CAAC,CAAC,CAAC;IAdvE,CAAC;CAeF\"}","dts":{"name":"/home/travis/build/googlemaps/v3-utility-library/packages/jest-mocks/mvcarray.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/// <reference types=\"jest\" />\r\n/// <reference types=\"googlemaps\" />\r\nimport { MVCObject } from \"./mvcobject\";\r\nexport declare class MVCArray<T> extends MVCObject implements google.maps.MVCArray<T> {\r\n    constructor(array?: T[]);\r\n    clear: jest.Mock<any, any>;\r\n    forEach: jest.Mock<any, any>;\r\n    getArray: jest.Mock<any, any>;\r\n    getAt: jest.Mock<any, any>;\r\n    getLength: jest.Mock<any, any>;\r\n    insertAt: jest.Mock<any, any>;\r\n    pop: jest.Mock<any, any>;\r\n    push: jest.Mock<any, any>;\r\n    removeAt: jest.Mock<any, any>;\r\n    setAt: jest.Mock<any, any>;\r\n}\r\n"}}
